---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: playgrounds.inference.llmaz.io
spec:
  group: inference.llmaz.io
  names:
    kind: Playground
    listKind: PlaygroundList
    plural: playgrounds
    shortNames:
    - pl
    singular: playground
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Playground is the Schema for the playgrounds API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PlaygroundSpec defines the desired state of Playground
            properties:
              backendRuntimeConfig:
                description: |-
                  BackendRuntimeConfig represents the inference backendRuntime configuration
                  under the hood, e.g. vLLM, which is the default backendRuntime.
                properties:
                  args:
                    description: |-
                      Args represents the specified arguments of the backendRuntime,
                      will be append to the backendRuntime.spec.Args.
                    properties:
                      flags:
                        description: |-
                          Flags represents all the preset configurations.
                          Flag around with {{ .CONFIG }} is a configuration waiting for render.
                        items:
                          type: string
                        type: array
                      name:
                        default: default
                        description: Name represents the identifier of the backendRuntime
                          argument.
                        type: string
                    required:
                    - name
                    type: object
                  envs:
                    description: Envs represents the environments set to the container.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  name:
                    default: vllm
                    description: Name represents the inference backend under the hood,
                      e.g. vLLM.
                    type: string
                  resources:
                    description: |-
                      Resources represents the resource requirements for backend, like cpu/mem,
                      accelerators like GPU should not be defined here, but at the model flavors,
                      or the values here will be overwritten.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  version:
                    description: |-
                      Version represents the backend version if you want a different one
                      from the default version.
                    type: string
                type: object
              elasticConfig:
                description: |-
                  ElasticConfig defines the configuration for elastic usage,
                  e.g. the max/min replicas. Default to 0 ~ Inf+.
                  This requires to install the HPA first or will not work.
                properties:
                  maxReplicas:
                    description: |-
                      MaxReplicas indicates the maximum number of inference workloads based on the traffic.
                      Default to nil means there's no limit for the instance number.
                    format: int32
                    type: integer
                  minReplicas:
                    default: 1
                    description: |-
                      MinReplicas indicates the minimum number of inference workloads based on the traffic.
                      Default to nil means we can scale down the instances to 1.
                      If minReplicas set to 0, it requires to install serverless component at first.
                    format: int32
                    type: integer
                type: object
              modelClaim:
                description: |-
                  ModelClaim represents claiming for one model, it's a simplified use case
                  of modelClaims. Most of the time, modelClaim is enough.
                  ModelClaim and modelClaims are exclusive configured.
                properties:
                  inferenceFlavors:
                    description: |-
                      InferenceFlavors represents a list of flavors with fungibility support
                      to serve the model.
                      If set, The flavor names should be a subset of the model configured flavors.
                      If not set, Model configured flavors will be used by default.
                    items:
                      type: string
                    type: array
                  modelName:
                    description: ModelName represents the name of the Model.
                    type: string
                type: object
              modelClaims:
                description: |-
                  ModelClaims represents claiming for multiple models for more complicated
                  use cases like speculative-decoding.
                  ModelClaims and modelClaim are exclusive configured.
                properties:
                  inferenceFlavors:
                    description: |-
                      InferenceFlavors represents a list of flavors with fungibility supported
                      to serve the model.
                      - If not set, always apply with the 0-index model by default.
                      - If set, will lookup the flavor names following the model orders.
                    items:
                      type: string
                    type: array
                  models:
                    description: |-
                      Models represents a list of models with roles specified, there maybe
                      multiple models here to support state-of-the-art technologies like
                      speculative decoding, then one model is main(target) model, another one
                      is draft model.
                    items:
                      description: ModelRefer refers to a created Model with it's
                        role.
                      properties:
                        name:
                          description: Name represents the model name.
                          type: string
                        role:
                          default: main
                          description: |-
                            Role represents the model role once more than one model is required.
                            Such as a draft role, which means running with SpeculativeDecoding,
                            and default arguments for backend will be searched in backendRuntime
                            with the name of speculative-decoding.
                          enum:
                          - main
                          - draft
                          type: string
                      required:
                      - name
                      type: object
                    minItems: 1
                    type: array
                type: object
              replicas:
                default: 1
                description: Replicas represents the replica number of inference workloads.
                format: int32
                type: integer
            type: object
          status:
            description: PlaygroundStatus defines the observed state of Playground
            properties:
              conditions:
                description: Conditions represents the Inference condition.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
